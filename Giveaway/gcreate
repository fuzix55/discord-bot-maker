{
  "name": "gcreate",
  "permissions": "NONE",
  "restriction": "1",
  "_id": "DvDki",
  "actions": [
    {
      "storage": "0",
      "varName": "",
      "name": "Delete Message"
    },
    {
      "behavior": "1",
      "interpretation": "1",
      "code": "const Discord = require(\"discord.js\");\nconst fs = require('fs');\nvar embed = [];\nvar mainMessage;\n\n//Setings\nvar timezone = \"UTC\"; // Default: UTC || Takes abbreviation timezones like EST, EDT, PST, etc.\nvar debug = false; // Default: false || Prints any errors that may have occured; will also print for await messages that ran out of time\n\ntry {\n    new Date().toLocaleString(\"en-US\", {\n        timeZone: timezone\n    })\n} catch (e) {\n    console.log(`${timezone} is an invalid timezone!\\nResetting back to UTC.`);\n    timezone = \"UTC\";\n}\n\n// Above checks validity of timezone, will reset to UTC if invalid.\n// Please do not modify!\n\nlet embedTemplate = new Discord.RichEmbed({\n    color: 0xFFFF00,\n    author: {\n        name: client.user.username,\n        icon_url: client.user.avatarURL\n    },\n    title: \"Giveaway Setup\",\n    description: \"This is a test embed to showcase what they look like and what they can do.\",\n    timestamp: new Date(),\n})\n\nvar giveaway = {\n    \"itemGivingAway\": \"\",\n    \"time\": 0,\n    \"winner\": 1,\n    \"finishUnix\": 0,\n    \"channel\": \"\",\n    \"server\": msg.guild.id,\n    \"giveawayMessageID\": \"\",\n    \"id\": Math.floor(Math.random() * 999999) + 100000\n}\n\n\n\nif (msg.member.hasPermission('MANAGE_CHANNELS')) {\n    embedTemplate[\"description\"] = `Please first specify what embed title you would like for the giveaway.`;\n    msg.channel.send(embedTemplate)\n        .then((message) => {\n            mainMessage = message;\n            askQuestion(`Please first specify what embed title you would like for the giveaway.`).then((response) => {\n                embed[0] = response.content;\n                askQuestion(`The embed title will be **${embed[0]}**\\n\\nIf this is correct please now enter a description!\\nTo cancel the prompt, please say **cancel**..`).then((response) => {\n                    embed[1] = response.content\n                    if (embed[1].toLowerCase() == \"cancel\") {\n                        errorMessage('Prompt cancelled due to user cacellation. \\nPlease re-execute the command to run through the prompt again!', \"User responded with cancel thus cancelling the prompt\");\n                    } else {\n                        embedTemplate[\"description\"] = `The embed title will be **${embed[0]}** and the description is:\\n\\n${embed[1]}\\n\\nIf this is correct, please respond with \"confirm\" to send the embed!\\nIf not, please respond with \"cancel\"`;\n                        askQuestion(`The embed title will be **${embed[0]}** and the description is:\\n\\n${embed[1]}\\n\\nIf this is correct, please respond with \"confirm\" to send the embed!\\nIf not, please respond with \"cancel\"`).then((response) => {\n                            if (response.content.toLowerCase() == \"confirm\") {\n                                askQuestion(`Please now specify what you are giving away!`).then((response) => {\n                                    giveaway[\"itemGivingAway\"] = response.content;\n                                    askQuestion(`You are giving away \"${response.content}\" correct?\\n\\nIf so please respond now with the number of winners you would like to have.\\nIf not, please respond with anything else.`).then((response) => {\n                                        if (!isNaN(response.content)) {\n                                            if (parseInt(response.content) > 0) {\n                                                giveaway[\"winner\"] = parseInt(response.content);\n                                                askQuestion(`You are giving away \"${giveaway[\"itemGivingAway\"]}\" to ${response.content} user(s).\\n\\nIf this is correct, please now respond with the amount of time alloted to the giveaway.\\nEx. 1w | 1d | 1h | 1m`).then((response) => {\n                                                    let tempTime = response.content.toLowerCase();\n                                                    if (tempTime.includes(\"d\") || tempTime.includes(\"h\") || tempTime.includes(\"w\") || tempTime.includes(\"m\")) {\n                                                        let timeUp;\n                                                        let timeText;\n\n                                                        if (tempTime.includes(\"d\")) {\n                                                            timeUp = \"d\";\n                                                            timeText = \"day(s)\";\n                                                        } else if (tempTime.includes(\"h\")) {\n                                                            timeUp = \"h\";\n                                                            timeText = \"hour(s)\";\n                                                        } else if (tempTime.includes(\"w\")) {\n                                                            timeUp = \"w\";\n                                                            timeText = \"week(s)\";\n                                                        } else if (tempTime.includes(\"m\")) {\n                                                            timeUp = \"m\";\n                                                            timeText = \"minute(s)\";\n                                                        }\n\n                                                        tempTime = tempTime.split(timeUp);\n                                                        if (!isNaN(tempTime[0])) {\n                                                            tempTime[0] = parseInt(tempTime[0]);\n                                                            switch (timeUp) {\n                                                                case \"d\":\n                                                                    giveaway[\"time\"] = tempTime[0] * 86400;\n                                                                    break;\n                                                                case \"h\":\n                                                                    giveaway[\"time\"] = tempTime[0] * 3600;\n                                                                    break;\n                                                                case \"w\":\n                                                                    giveaway[\"time\"] = tempTime[0] * 604800;\n                                                                    break;\n                                                                case \"m\":\n                                                                    giveaway[\"time\"] = tempTime[0] * 60;\n                                                                    break;\n                                                            }\n                                                            askQuestion(`You are giving away \"${giveaway[\"itemGivingAway\"]}\" to ${giveaway[\"winner\"]} user(s)\\nThe winner will be drawn in ${tempTime[0]} ${timeText}\\n\\nIf this is correct, please now mention the channel the giveaway will be posted in.`).then ((response) => {\n                                                                if (response.mentions.channels.first() != null) {\n                                                                    let giveawayChannel = response.mentions.channels.first();\n                                                                    giveaway[\"channel\"] = giveawayChannel.id;\n                                                                    giveaway[\"finishUnix\"] = Math.floor(Date.now() / 1000) + giveaway[\"time\"];\n                                                                    var giveawayEmbed = new Discord.RichEmbed({\n                                                                        color: 0x2E7F98,\n                                                                        description: embed[1],\n                                                                        fields: [{\n                                                                                name: '\\u200b',\n                                                                                value: '\\u200b',\n                                                                                inline: false,\n                                                                            },\n                                                                            {\n                                                                                name: 'Item Giving Away',\n                                                                                value: giveaway[\"itemGivingAway\"],\n                                                                                inline: true,\n                                                                            },\n                                                                            {\n                                                                                name: 'Giveaway Created By',\n                                                                                value: `${msg.author}`,\n                                                                                inline: true,\n                                                                            },\n                                                                            {\n                                                                                name: 'Giveaway Started At',\n                                                                                value: new Date().toLocaleString(\"en-US\", {\n                                                                                    timeZone: timezone\n                                                                                }),\n                                                                                inline: true,\n                                                                            },\n                                                                            {\n                                                                                name: 'Giveaway Ending At',\n                                                                                value: new Date(giveaway[\"finishUnix\"] * 1000).toLocaleString(\"en-US\", {\n                                                                                    timeZone: timezone\n                                                                                }),\n                                                                                inline: true,\n                                                                            },\n                                                                        ],\n                                                                        footer: {\n                                                                            text: `The giveaway ends on ${new Date(giveaway[\"finishUnix\"] * 1000).toLocaleString(\"en-US\", { timeZone: timezone })} ${timezone.toUpperCase()} | ${giveaway[\"winner\"]} Winner(s) | ID: ${giveaway[\"id\"]}`\n                                                                        }\n                                                                    })\n                                    \n                                                                    giveawayChannel.send(giveawayEmbed)\n                                                                        .then(giveMsg => {\n                                                                            giveMsg.react(\"🎉\");\n                                                                            giveaway[\"giveawayMessageID\"] = giveMsg.id;\n                                                                            fs.readFile('./data/giveawayData.json', function read(err, data) {\n                                                                                if (err) {\n                                                                                    throw err;\n                                                                                }\n                                                                                data = JSON.parse(data);\n                                    \n                                                                                if (!data.hasOwnProperty(msg.guild.id)) {\n                                                                                    data[msg.guild.id] = [];\n                                                                                }\n                                    \n                                                                                data[msg.guild.id].push(giveaway);\n                                    \n                                                                                fs.writeFile(\"./data/giveawayData.json\", JSON.stringify(data), function(err) {\n                                                                                    if (err) {\n                                                                                        return console.log(err);\n                                                                                    }\n                                                                                });\n                                                                            });\n                                                                        });\n                                                                } else {\n                                                                    errorMessage(\"You didn't enter a valid channel!\\nEx. #example\\n\\nExiting setup; please re-run the command to restart the prompt.\", \"User did not mention a valid channel.\");\n                                                                }\n                                                            });\n                                                        } else {\n                                                            errorMessage(\"You didn't enter a valid time format!\\nEx. 1w | 1d | 1h | 1m\\n\\nExiting setup; please re-run the command to restart the prompt.\", \"User did not enter a valid time format like 1d, 1m, 1h\");\n                                                        }\n                                                    } else {\n                                                        errorMessage(\"You didn't enter a valid time format!\\nEx. 1w | 1d | 1h | 1m\\n\\nExiting setup; please re-run the command to restart the prompt.\", \"User did not enter a valid time format like 1d, 1m, 1h\");\n                                                    }\n                                                });\n\n                                            } else {\n                                                errorMessage(\"You didn't enter a valid number of winnners.\\nExiting setup; please re-run the command to restart the prompt.\", \"User did not input a valid number of winners (non-positive number).\");\n                                            }\n                                        } else {\n                                            errorMessage(\"You didn't enter a valid number of winnners.\\nExiting setup; please re-run the command to restart the prompt.\", \"User didn't enter a number for the number of winners.\");\n                                        }\n                                    });\n                                });\n                            } else {\n                                errorMessage('Prompt cancelled due to user responose (user did not respond with \"confirm\").\\nPlease re-execute the command to run through the prompt again!', \"User did not respond with confirm and thus the prompt has been cancelled.\");\n                            }\n                        });\n                    }\n                });\n            });\n        })\n    } else {\n        errorMessage(\"You do not have the `MANAGE ROLES` perimssion which is required to execute this command!\", \"User has no permission to execute the command.\");\n    }\n\nfunction errorMessage(error, errorCause = \"none\") {\n\n    if (debug) {\n        console.log(errorCause);\n    }\n\n    if (mainMessage != null) {\n        mainMessage.delete();\n    }\n\n    let errorTemplate = new Discord.RichEmbed({\n        color: 0xFF0000,\n        author: {\n            name: client.user.username,\n            icon_url: client.user.avatarURL\n        },\n        title: \"Giveaway Setup\",\n        description: error,\n        timestamp: new Date(),\n    })\n\n    msg.channel.send(errorTemplate);\n}\n\nfunction askQuestion(question) {\n    return new Promise(function(resolve, reject) {\n        embedTemplate[\"description\"] = question;\n        mainMessage.edit(embedTemplate);\n        msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n                max: 1,\n                time: 60000,\n                errors: ['time'],\n            })\n            .then(function(collected) {\n                msg.author.lastMessage.delete();\n                resolve(collected.first());\n            }).catch((error) => {\n                errorMessage('Sorry, you didnt provide a valid response in time!\\nPlease re-execute the command to go through the prompt again!', error, message);\n            });\n    })\n\n}",
      "storage": "0",
      "varName": "",
      "name": "Run Script"
    }
  ],
  "comType": "0"
}
